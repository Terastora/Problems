/*PROBLEM 1: 1. An Internet service provider has 3 different subscription packages for its customers:
Package A: For P995/mo 10 hrs of access are provided. Additional hours are P20/hr.
Package B: For P1495/mo 20 hrs of access are provided. Additional hours are P10/hr.
Package C: For P1995/mo of unlimited access is provided.
Write a program that calculates a customer’s monthly bill. It should ask which package the customer has
purchased and how many hours were used. It should then display the total amount due.*/

#include <iostream>
using namespace std;

int main ()
{
	int hours;
	char choice;
	
	cout << " What subscription package did you choose?\n";
	cout << " A - Package A \n" ;
	cout << " B - Package B \n" ;
	cout << " C - Package C \n" ;
	cin >> choice;
	
	
	
	switch (choice)
	{
		case 'A': cout << "How many hours have you used?\n";
			cin >> hours ;
			
			if (hours > 10)
			cout <<"Total amount due: Php"<< 995+20 * (hours - 10);
			else {
				cout <<"Total amount due: Php"<< "995";
			}
		break;
		
		case 'B': 
		cout << "How many hours have you used?\n";
			cin >> hours ;
			
			if (hours > 20)
			cout <<"Total amount due: Php"<< 1495+10 * (hours - 20);
			else {
				cout <<"Total amount due: "<< "Php1495";
			}
		
		break;
		
		case 'C': cout << "Total amount due: Php1995";
		break;
	}
	
	return 0;
}


/* PROBLEM 4: Create a program that will accept three numbers as input and display the LARGEST number
of the three. See the sample output below:
Enter first number: 12
Enter second number: 36
Enter third number: 24
The LARGEST of the three numbers is 36. */

#include <iostream> 
using namespace std;

int main ()
{
	int a,b,c;
	
	cout << "Enter three digits\n";
	cin >> a >> b >> c;
	
	if ( a >= b && a >=c)
	{
		cout << a << " is the largest number";
	}
	
	
	
	 if ( b >= a && b >=c)
	{
		cout << b << " is the largest number";
	}
	
	
	
	 if ( c >= a && c >=b)
	{
		cout << c << " is the largest number";
	}
	return 0;
}






/* : Create a program that will “count” numbers, separated by commas, up to 10. When it
reaches 10, count by 2s until you reach 30. See the sample output below:
Counting…
1,2,3,4,5,6,7,8,9,10,12,14,16,18,20,22,24,26,28,30 */
#include <iostream>


using namespace std;

int main ()
{
	
	int a =1 ;
	
	

	while(a <= 10){
		
		cout << a<<"," ;
		 a++ ;
		
	}
	
	if (a = 10) while (a <=26){
		a = a + 2 ;
		cout << a<<"," ;
		
		
	}
	if (a=30){
	
	cout << a;}

	return 0;
}



/*Create a program that will generate the multiplication table (up to x10) of a number. See the
sample output below:
Enter a number: 6
Multiplication table of 6:
1 * 6 = 6
2 * 6 = 12
3 * 6 = 18
4 * 6 = 24
5 * 6 = 30
6 * 6 = 36
7 * 6 = 42
8 * 6 = 48
9 * 6 = 54
10 * 6 = 60*/
#include <iostream>

using namespace std;

int main()
{
	int y;
	
	cout<<"Enter the multiplicand\n";
	cin >> y;
	
	for (int x = 1; x <= 10; x++){
		cout << x << "*" << y << " = "<< y * x <<endl;
		
	}
	
	return 0;
}

//Problem 7
#include <iostream>
using namespace std;

int main()
{
    int x, sum = 0;
do {

    cout << "Enter a number: ";
    cin >> x;

	if ( x > 0){
	
    for (int i = 1; i <= x; ++i) {
        sum += i;
    }
         cout << "The sum of all whole numbers from 1 to " << x << " is " << sum<< endl;;
   
    }


else {
	cout << "Thank You!";

}

}while (x!=0);

    return 0;
}

/* The Fibonacci sequence is a sequence which starts with 0 and 1, with subsequent numbers
of the sequence (called Fibonacci numbers) being the sum of the previous two. Thus, the first few terms of
the sequence are: 0,1,1,2,3,5,8,…
Create a program that will output the NEXT 20 Fibonacci numbers (after 0 and 1) in one line, separated by
commas. See the sample output below:
Fibonacci numbers:
0,1,1,2,3,5,8,13,21,34,55,89,144,233,377,610,987,1597,2584,4181,6765,10946 */
#include<iostream>
 
using namespace std;
 
main()
{
   int n, c, first = 0, second = 1, next;
 
   cout << "Enter the number of terms of Fibonacci series you want" << endl;
   cin >> n;
 
   cout << "First " << n << " terms of Fibonacci series are :- " << endl;
 
   for ( c = 0 ; c < n ; c++ )
   {
      if ( c <= 1 )
         next = c;
      else
      {
         next = first + second;
         first = second;
         second = next;
      }
      cout << next << endl;
   }
 
   return 0;
}
